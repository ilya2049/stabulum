// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	product2 "stabulum/internal/app/product"
	product3 "stabulum/internal/domain/product"
	"stabulum/internal/infrastructure/config"
	"stabulum/internal/infrastructure/postgres/product"
	"stabulum/internal/infrastructure/postgres/product/stub"
)

// Injectors from wire.go:

func NewContainer(cfg config.Config) *Container {
	usecasesConfig := config.NewUsecasesConfig(cfg)
	repository := product.NewRepostiory()
	usecases := product2.NewUsecases(usecasesConfig, repository)
	container := newContainer(usecases)
	return container
}

func NewTestContainer(cfg config.Config) *Container {
	usecasesConfig := config.NewUsecasesConfig(cfg)
	productRepositoryConfig := config.NewProductRepositoryStubConfig(cfg)
	productRepository := stub.NewProductRepository(productRepositoryConfig)
	usecases := product2.NewUsecases(usecasesConfig, productRepository)
	container := newContainer(usecases)
	return container
}

// wire.go:

var configSet = wire.NewSet(config.NewUsecasesConfig, config.NewProductRepositoryStubConfig)

var productPostgresRepositorySet = wire.NewSet(wire.Bind(new(product3.Repository), new(*product.Repository)), product.NewRepostiory)

var productStubRepositorySet = wire.NewSet(wire.Bind(new(product3.Repository), new(*stub.ProductRepository)), stub.NewProductRepository)
